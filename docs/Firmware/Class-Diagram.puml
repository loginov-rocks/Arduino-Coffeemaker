@startuml Class

class Relay {
    boolean getState()
    ..
    void on()
    void off()
    void toggle()
}

enum BoilerTemp {
    Cold
    Boiling
    Steam
}

class Boiler {
    boolean getState()
    BoilerTemp getTemp()
    BoilerTemp getTargetTemp()
    ..
    void setTargetTemp(BoilerTemp)
    ..
    void work()
}

enum ToggleState {
    Off
    Boil
    MakeSteam
    PourWater
}

class Toggle {
    int getOffReading()
    int getBoilReading()
    int getMakeSteamReading()
    int getPourWaterReading()
    int getReadingDeviation()
    int getDebounceTimeout()
    ..
    ToggleState getState()
    boolean getIsToggled()
    ..
    void setOffReading(int)
    void setBoilReading(int)
    void setMakeSteamReading(int)
    void setPourWaterReading(int)
    void setReadingDeviation(int)
    void setDebounceTimeout(int)
}

enum EspressoMachineCommand {
    Off
    PourWater
    StopPouringWater
    Boil
    MakeSteam
    CoolDown
    ToggleBoil
    ToggleMakeSteam
    TogglePourWater
}

class EspressoMachine {
    boolean getPumpState()
    boolean getBoilerState()
    BoilerTemp getBoilerTemp()
    BoilerTemp getBoilerTargetTemp()
    ToggleState getToggleState()
    ..
    EspressoMachineCommand getCommand()
    boolean getIsCommandChanged()
    boolean getIsDone()
    ..
    boolean command(EspressoMachineCommand)
    ..
    void work()
}

Boiler <|- Relay
Boiler *-- BoilerTemp

Toggle *-- ToggleState

EspressoMachine *- EspressoMachineCommand

EspressoMachine *-- Relay: pump
EspressoMachine *-- Boiler: boiler
EspressoMachine *-- Toggle: toggle

@enduml
